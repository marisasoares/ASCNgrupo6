---
# Service for exposing MySQL
- name: Service expose MySQL
  apiVersion: v1
  kind: Service
  metadata:
    name: mysql-service # logical name of the service, which will also become the DNS name of the service when it is created.
    labels:
      app: mysql
      tier: database
  spec:
    type: ClusterIP
    selector:
      app: mysql
    ports:
      - targetPort: 3306 # port that containers are listening on
        port: 3306 # port number exposed internally in the cluster

# Persistent Volume Claim for MySQL pod
- name: Create persistent Volume
  apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: mysql-pv-claim
  spec:
    accessModes:
      - ReadWriteOnce
    storageClassName: standard-rwo
    resources:
      requests:
        storage: 20Gi

# Deployment for MySQL
- name: Deployment for MySql
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: mysql-deployment
    labels:
      app: mysql
      tier: database
  spec:
    selector:
      matchLabels:
        app: mysql
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: mysql
          tier: database
      spec:
        containers:
        - name: mysql
          image: mysql:latest
          env: # The variables below could be set on a ConfigMap object
          - name: MYSQL_ALLOW_EMPTY_PASSWORD
            value: "true"
          - name: MYSQL_DATABASE
            value: swap
          - name: MYSQL_USER
            value: swapuser
          - name: MYSQL_PASSWORD
            value: "123456" # Use Secret object in real usage
          ports:
          - containerPort: 3306
          volumeMounts:
          - name: mysql-persistent-storage
            mountPath: /var/lib/mysql
        volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim



